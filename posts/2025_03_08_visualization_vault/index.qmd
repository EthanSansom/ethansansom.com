---
title: "Visualization Vault"
date: "2025-03-08"
categories: ["data-viz", "draft"]
# image: "vlightr_hex.svg"
# smallimage: '<img src="posts/2025_01_30_vlightr/vlightr_small.svg">'
description: |
  Welcome to the Visualization Vault. Here, I keep evidence of projects whose
  source code has been lost to corrupted USB sticks, abandoned computers,
  and my own forgetfulness.
summary: |
  Welcome to the Visualization Vault. Here, I keep evidence of projects whose
  source code has been lost to corrupted USB sticks, thrown-away desktop computers,
  and my own forgetfulness.
format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />
          <script src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"></script>
    include-after-body:
      - text: |
          <script type="text/javascript">
              const lightbox = GLightbox({});
          </script>
editor:
  markdown: 
    wrap: 72
---

<!-- 
Use lightbox for the videos as well, you'll have to do this yourself:
https://github.com/quarto-dev/quarto-cli/discussions/9290

Glightbox docs: https://github.com/biati-digital/glightbox/blob/master/README.md

TODO: Make the file-folder set up. I think it's fine if the file folder ends up
"on-top" of the header text of the article. Actually, that's kind of cool.
--->

```{=html}
<style>
.file-cabinet {
  position: relative;
  width: 100%;
  height: 300px;
}

.folder {
  position: absolute;
  width: 354px;
  height: 283px;
  transition: transform 0.3s ease-in-out;
}

.folder-contents {
  position: absolute;
  width: 354px;
  height: 283px;
}

.folder-contents-wrapper {
  border: 1px solid #1E1E1E;
  background-color: #FFFBFC;
  border-radius: 17px;
  padding: 10px;
}

.folder:not(.raised):hover {
  position: absolute;
  width: 354px;
  height: 283px;
  transform: translateY(-10px);
  cursor: pointer;
}

.folder-title {
  position: absolute;
  top: 7px;
  left: 12px;
  font-weight: 600;
  font-size: 16px;
}

.folder-text {
  position: absolute;
  top: 75px;
  left: 15px;
  font-size: 14px;
}

.folder-file-container {
  position: absolute;
  top: 200px;
  left: 15px;
}

.folder-file {
  width: 50px;
  height: auto;
  padding: 2px;
}

.divider {
  height: 225px;
}
</style>
```

```{ojs}
//| echo: false
//| output: false

d3 = require("d3@7");

// Load the file urls associated with each project
treemap = FileAttachment("resources/treemap.png").url();

/*
d3.select(".folder-contents")
  .append("img")
  .attr("src", treemap)
  .attr("width", "100%");
*/

// Record the original "bottom" position of each folder
d3.selectAll(".folder")
  .attr("data-bottom", function() { return d3.select(this).style("bottom"); })

document.addEventListener("click", function(event) {
  const clicked_element = event.target.closest(".folder");
  const folders = d3.selectAll(".folder");
  
  // NOTE: This calculates the bottom offset required to position the folder at
  // the center of the screen (based on current scroll height), but I've opted
  // to re-position absolutely.
  //
  // const cabinet_bottom = d3.select(".file-cabinet").node().getBoundingClientRect().bottom;
  // const window_center = window.innerHeight / 2;
  // const folder_height = 283;
  // const raise_height = `${cabinet_bottom - (folder_height / 2) - window_center}px`;
  
  const duration_ms = 300;
  const raise_height = "350px";
  const folder_width = 354;

  if (clicked_element) {
    // We're clicking on the raised folder, do nothing
    if (d3.select(clicked_element).classed("raised")) {
      return;
    }
  
    // A folder was clicked, reset all other folders and raise the clicked folder
    folders
      .classed("raised", false)
      .transition()
      .duration(duration_ms)
      .style("bottom", function() { return d3.select(this).attr("data-bottom") });
    
    d3.select(clicked_element)
      .classed("raised", true)
      .transition()
      .duration(duration_ms)
      .style("bottom", raise_height);
      
    // Remove any folder contents if they exist
    d3.select(".folder-contents").select("div").remove();
      
    // Fade in the corresponding image for this folder
    d3.select(".folder-contents")
      .style("bottom", raise_height)
      .style("left", `${folder_width + 10 + parseFloat(d3.select(clicked_element).style("left"))}px`)
      .append("div")
      .attr("class", "folder-contents-wrapper")
      .call(div => div.append("img").attr("width", "100%").attr("src", treemap))
      .style("opacity", 0)
      .transition()
      .delay(100)
      .duration(duration_ms)
      .style("opacity", 1);
    
  } else {
    // Clicked outside of any folder, reset all folders
    folders
      .classed("raised", false)
      .transition()
      .duration(duration_ms)
      .style("bottom", function() { return d3.select(this).attr("data-bottom") });
    
    // Remove any folder contents if they exist
    d3.select(".folder-contents")
      .select("div")
      .transition()
      .duration(duration_ms / 3)
      .style("opacity", 0)
      .on("end", function() {
        d3.select(this).remove();
      });
  }
});
```


:::{.divider}
:::

:::::{.file-cabinet}

:::{.folder-contents}
:::

:::{.folder style="bottom: 90px; left: 60px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">TidyTuesday Cats</span>
<span class="folder-text">
This is the text contents of the TidyTuesday Cats
</span>
<div class="file-container"></div>
```
:::

:::{.folder style="bottom: 40px; left: 90px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">Color Sorting</span>
<span class="folder-text">
This is the text contents of the Color Sorting
</span>
<div class="folder-file-container"></div>
```
:::

:::{.folder style="bottom: 60px; left: 440px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">World Data Comp.</span>
<span class="folder-text">
This is the text contents of the World Data Comp.
</span>
<div class="folder-file-container"></div>
```
:::

:::{.folder style="bottom: 0px; left: 20px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">Currency Terminal</span>
<span class="folder-text">
This is the text contents of the currency terminal
</span>
<div class="folder-file-container"></div>
```
:::

:::{.folder style="bottom: 0px; left: 350px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">TCAT Report</span>
<span class="folder-text">
This is the text contents of the TCAT report
</span>
<div class="folder-file-container"></div>
```
:::

:::::
