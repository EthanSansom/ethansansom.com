---
title: "Visualization Vault"
date: "2025-03-08"
categories: ["data-viz", "draft"]
css: styles.css
# image: "vlightr_hex.svg"
# smallimage: '<img src="posts/2025_01_30_vlightr/vlightr_small.svg">'
description: |
  Welcome to the Visualization Vault. Here, I keep evidence of projects whose
  source code has been lost to corrupted USB sticks, abandoned computers,
  and my own forgetfulness.
summary: |
  Welcome to the Visualization Vault. Here, I keep evidence of projects whose
  source code has been lost to corrupted USB sticks, thrown-away desktop computers,
  and my own forgetfulness.
format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />
          <script src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"></script>
    include-after-body:
      - text: |
          <script type="text/javascript">
              const lightbox = GLightbox({});
          </script>
editor:
  markdown: 
    wrap: 72
---

<!-- 
TODO: 
- Add one of those fun twisting grids to the Color Sorting example
- Change the article description to reflect that this is a "file cabinet" of sorts
- Encourage clicking on the items somehow
- Adjust the CSS to prevent the folder text from disapearing in dark mode
--->


```{ojs}
//| echo: false
//| output: false

d3 = require("d3@7");

// Record the original "bottom" position of each folder
d3.selectAll(".folder")
  .attr("data-bottom", function() { return d3.select(this).style("bottom"); })

document.addEventListener("click", function(event) {
  const clicked_element = event.target.closest(".folder");
  const folders = d3.selectAll(".folder");
  
  // NOTE: This calculates the bottom offset required to position the folder at
  // the center of the screen (based on current scroll height), but I've opted
  // to re-position absolutely.
  //
  // const cabinet_bottom = d3.select(".file-cabinet").node().getBoundingClientRect().bottom;
  // const window_center = window.innerHeight / 2;
  // const folder_height = 283;
  // const raise_height = `${cabinet_bottom - (folder_height / 2) - window_center}px`;
  
  const duration_ms = 300;
  const raise_height = "350px";
  const folder_width = 354;

  if (clicked_element) {
    // We're clicking on the raised folder, do nothing
    if (d3.select(clicked_element).classed("raised")) {
      return;
    }
  
    // A folder was clicked, reset all other folders and raise the clicked folder
    folders
      .classed("raised", false)
      .call(folder => folder.select(".folder-text")
        .transition()
        .duration(duration_ms)
        .style("opacity", 0)
        .on("end", function() {
          d3.select(this).style("display", "none")
        })
      )
      .call(folder => folder.select(".folder-file-container")
        .transition()
        .duration(duration_ms)
        .style("opacity", 0)
        .on("end", function() {
          d3.select(this).style("display", "none")
        })
      )
      .transition()
      .duration(duration_ms)
      .style("bottom", function() { return d3.select(this).attr("data-bottom") });
    
    d3.select(clicked_element)
      .classed("raised", true)
      .transition()
      .duration(duration_ms)
      .style("bottom", raise_height);
      
    // Show the contents of the folder
    d3.select(clicked_element)
      .classed("raised", true)
      .call(folder => folder.select(".folder-text")
        .style("display", "inline")
        .style("opacity", 0)
        .transition()
        .delay(200)
        .duration(duration_ms)
        .style("opacity", 1)
      )
      .call(folder => folder.select(".folder-file-container")
        .style("display", "flex")
        .style("opacity", 0)
        .transition()
        .delay(200)
        .duration(duration_ms)
        .style("opacity", 1)
      );
  } else {
    // Clicked outside of any folder, reset all folders
    folders
      .classed("raised", false)
      .call(folder => folder.select(".folder-text")
        .transition()
        .duration(duration_ms)
        .style("opacity", 0)
        .on("end", function() {
          d3.select(this).style("display", "none")
        })
      )
      .call(folder => folder.select(".folder-file-container")
        .transition()
        .duration(duration_ms)
        .style("opacity", 0)
        .on("end", function() {
          d3.select(this).style("display", "none")
        })
      )
      .transition()
      .duration(duration_ms)
      .style("bottom", function() { return d3.select(this).attr("data-bottom") });
  }
});
```


:::{.divider}
:::

:::::{.file-cabinet}

:::{.folder style="bottom: 100px; left: 335px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">Dashboard</span>
<span class="folder-text">
I am a frequent victim of my own wild disregard for my personal time, which once
manifested in a short-lived quest to sell interactive dashboards as a freelancer 
on <a href="https://www.fiverr.com/">Fiverr</a>. I created this dashboard for my 
freelancer page, using R and the <a href="https://plotly.com/r/">{plotly}</a> 
interactive graphing library.
</span>
```
:::{.folder-file-container}
```{=html}
<div>
  <p class = "file-name">terminal.mp4</p>
  <div class = "file">
    <a 
      href="https://vimeo.com/1063903950" class="glightbox" data-gallery="Dashboard">
      <img src="resources/dashboard-thumbnail.jpg" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>
```
:::
:::

:::{.folder style="bottom: 90px; left: 60px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">TidyTuesday Cats</span>
<span class="folder-text">
My <a href="https://github.com/rfordatascience/tidytuesday/tree/main/data/2023/2023-01-31">TidyTuesday 2023-01-31</a> 
plot draws the distance traveled by a group of GPS-strapped cats, a choice informed 
by my desire to show off some great cat names - shoutout to Smudge and Macaulay Mccat.
</span>
```
:::{.folder-file-container}
```{=html}
<div>
  <p class = "file-name">cats.svg</p>
  <div class = "file">
    <a 
      href="resources/cat_circles.png" 
      class="glightbox" 
      data-gallery="TidyTuesday Cats"
      data-description="The data for this plot comes from a 2013 to 2017 study, in which 
      cat owners across the world rigged their cats with GPS sensors which recorded their 
      pets' movements over the course of many months."
    >
      <img src="resources/cat_circles.png" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>
```
:::
:::

:::{.folder style="bottom: 40px; left: 90px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">Color Sorting</span>
<span class="folder-text">
These are the outputs of a program which used Python's <a href="https://pillow.readthedocs.io/en/stable/">Pillow</a> 
imaging library to sub-divide images into a grid of small squares and re-arrange
those squares into a new image.
</span>
```
:::{.folder-file-container}
```{=html}
<div>
  <p class = "file-name">color-sort.gif</p>
  <div class = "file">
    <a 
      href="resources/color_sort.gif" 
      class="glightbox" 
      data-gallery="Color Sorting"
    >
      <img src="resources/color_sort.gif" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>
```
:::
:::

:::{.folder style="bottom: 60px; left: 420px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">World Data Comp.</span>
<span class="folder-text">
This plot, which uses simulated data, was my attempt at the 2023 <a href="https://informationisbeautiful.net/">Information is Beautiful</a> 
<a href="(https://informationisbeautiful.net/2023/the-winners-of-the-world-dataviz-prize-2023/">World Dataviz Competition</a>. 
</span>
```
:::{.folder-file-container}
```{=html}
<div>
  <p class = "file-name">indicators.svg</p>
  <div class = "file">
    <a 
      href="resources/world_data_plot.svg" 
      class="glightbox" 
      data-gallery="World Data Comp."
      data-description="The goal of the competition was to produce a piece of data-visualization showing
trends in global measures of well-being using a dataset provided by Information is Beautiful. This plot
was never submitted to the competition as I, getting carried away with my {ggplot2} code, never adapted
the plot to use the non-simulated dataset."
    >
      <img src="resources/world_data_plot.svg" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>
```
:::
:::

:::{.folder style="bottom: 0px; left: 20px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">Currency Terminal</span>
<span class="folder-text">
This is a tiny terminal application coded mostly in Python with a little bit
of R. It fetches current and historical global currency 
exchange data and features a mostly-ASCII-display, complete with a scrolling 
currency ticker.
</span>
```
:::{.folder-file-container}
```{=html}
<div>
  <p class = "file-name">terminal.mp4</p>
  <div class = "file">
    <a href="https://vimeo.com/1063903776" class="glightbox" data-gallery="Currency Terminal">
      <img src="resources/terminal-thumbnail.jpg" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>
```
:::
:::

:::{.folder style="bottom: 0px; left: 350px;"}
```{=html}
<img src="resources/folder.svg">
<span class="folder-title">TCAT Report</span>
<span class="folder-text">
These are a few slides from a presentation I gave at the end of an intership
with <a href="">The Center for Active Transportation (TCAT)</a>. I was tasked with
measuring the effectiveness of transport programs put in place during the COVID-19 
pandemic by the City of Toronto.
</span>
```
:::{.folder-file-container}
```{=html}
<div>
  <p class = "file-name">bar.svg</p>
  <div class = "file">
    <a 
      href="resources/bar_chart_1.png"
      class="glightbox"
      data-gallery="TCAT Report"
    >
      <img src="resources/bar_chart_1.png" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>

<div>
  <p class = "file-name">treemap.svg</p>
  <div class = "file">
    <a 
      href="resources/treemap.png"
      class="glightbox"
      data-gallery="TCAT Report"
    >
      <img src="resources/treemap.png" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>

<div>
  <p class = "file-name">map.svg</p>
  <div class = "file">
    <a 
      href="resources/map_1.png"
      class="glightbox"
      data-gallery="TCAT Report"
    >
      <img src="resources/map_1.png" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>

<div>
  <p class = "file-name">dumbell.svg</p>
  <div class = "file">
    <a 
      href="resources/dumbell.png"
      class="glightbox"
      data-gallery="TCAT Report"
    >
      <img src="resources/dumbell.png" alt="image" style = "width: 100%;"/>
    </a>
  </div>
</div>
```
:::
:::

:::::
