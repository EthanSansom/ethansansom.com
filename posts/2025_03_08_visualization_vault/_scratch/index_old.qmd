---
title: "Visualization Vault"
date: "2025-03-08"
categories: ["data-viz", "draft"]
# image: "vlightr_hex.svg"
# smallimage: '<img src="posts/2025_01_30_vlightr/vlightr_small.svg">'
description: |
  Welcome to the Visualization Vault. Here, I keep evidence of projects whose
  source code has been lost to corrupted USB sticks, abandoned computers,
  and my own forgetfulness.
summary: |
  Welcome to the Visualization Vault. Here, I keep evidence of projects whose
  source code has been lost to corrupted USB sticks, thrown-away desktop computers,
  and my own forgetfulness.
format:
  html:
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />
          <script src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js"></script>
    include-after-body:
      - text: |
          <script type="text/javascript">
              const lightbox = GLightbox({});
          </script>
editor:
  markdown: 
    wrap: 72
---

<!-- 
Use lightbox for the videos as well, you'll have to do this yourself:
https://github.com/quarto-dev/quarto-cli/discussions/9290

Glightbox docs: https://github.com/biati-digital/glightbox/blob/master/README.md
--->

<!-- 
TODO: Make this into a cute grid with just the thumbnail and short title, then
have the description included when the thing is opened (you have an example in
the Ploty one).
--->

<!-- Stacks each Quarto {.column} on small screens --->

```{=html}
<style>
@media (max-width: 768px) {
  /* Stacks LHS description {.column} ontop of RHS video/image column */
  div.columns {
    display: flex;
    flex-direction: column !important;
  }
  /* Makes sure text appears on top, for {.columns} with text on the right */
  div#reverse.columns {
    display: flex;
    flex-direction: column-reverse !important;
  }
  div.column {
    width: 100% !important;
  }
}

/* General Container Styles */
.img-container,
.img-container-white {
  position: relative;
  display: inline-block;
  overflow: hidden;
}

.img-container img,
.img-container-white img {
  width: 100%;
  height: 100%;
  transition: filter 0.3s ease;
}

.img-container .hover-text,
.img-container-white .hover-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Center the text */
  opacity: 0; /* Hidden by default */
  color: var(--bs-body-color);
  font-weight: 700;
  z-index: 99; /* Ensures that text appears above the img-container */
  transition: opacity 0.3s ease;
}

.img-container:hover img,
.img-container-white:hover img {
  filter: blur(3px); /* Apply a slight blur to the image */
}

.img-container:hover .hover-text,
.img-container-white:hover .hover-text {
  opacity: 1; /* Show text when hovered */
}

/* Common Overlay Styles */
.img-container::after,
.img-container-white::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0; /* Hidden by default */
  transition: opacity 0.3s ease;
}

/* Light overlay for .img-container-white */
.img-container-white::after {
  background: rgba(255, 255, 255, 0.4); /* Light overlay */
}

.img-container-white:hover::after {
  opacity: 1; /* Show the light overlay on hover */
}
</style>
```

<!-- Currency Exchange Terminal Application --->
<br>

:::::{.column-page-inset}
:::::{.columns #reverse}

:::{.column width="50%"}
{{< video https://vimeo.com/1063903776?share=copy aspect-ratio="1x1" >}}
:::

:::{.column width="5%"}
:::

:::{.column width="45%"}
**Currency Exchange Terminal Application**

This is a tiny terminal application coded in Python which fetched current and
historical global currency exchange data. It features a mostly-ASCII-display,
complete with a scrolling currency ticker and animated line and bar charts. 

The terminal even includes a *very* minimal one-month currency forecast, implemented 
using an ARMA model (I think I was in an economic time-series class at the time).
:::

:::::
:::::

<!-- World Dataviz Competition --->
<br>

:::::{.column-page-inset}
:::::{.columns}

:::{.column width="50%"}
**World Dataviz Competition (Simulated Data)**

My attempt to enter the [Information is Beautiful](https://informationisbeautiful.net/) [World Dataviz Competition](https://informationisbeautiful.net/2023/the-winners-of-the-world-dataviz-prize-2023/)
in 2023 was a classic *plot-first-data-second* blunder, which left the graphic
you see here un-submitted.

The goal of the competition was to produce a piece of data-visualization showing
trends in global measures of well-being. Long story short, I got carried away 
writing the now long lost {ggplot2} code for this graphic (using a simulated set 
of data) and I neglected to look too hard at the real data provided for the competition. 
As it happens, the real data looked *nothing* like what I'd prepared to plot and 
I, busy with work and school, didn't have the willpower to start from scratch.
:::

:::{.column width="5%"}
:::

:::{.column width="45%"}
![](resources/world_data_plot.svg){.lightbox}
:::

:::::
:::::

<!-- TidyTuesday Cat Circles --->
<br>

:::::{.column-page-inset}
:::::{.columns #reverse}

:::{.column width="50%"}
```{=html}
<a href="resources/cat_circles.png" class="glightbox">
  <div class = "img-container-white">
    <img src="resources/cat_circles.png" alt="image" style = "width: 100%; height: 100%;" />
    <p class = "hover-text">TidyTuesday Cat Circles</p>
  </div>
</a>
```

<!--- ![](resources/cat_circles.png){.lightbox} --->
:::

:::{.column width="5%"}
:::

:::{.column width="45%"}
**TidyTuesday Cat Circles**

In a  2013 to 2017 study, cat owners across the world rigged their cats with GPS
sensors which recorded their pets' movements over the course of months or years.
Data from this study was provided in the [2023-01-31 TidyTuesday](https://github.com/rfordatascience/tidytuesday/tree/main/data/2023/2023-01-31)
challenge.

My plot for this TidyTuesday drew the total distance traveled by each cat in the 
study as a circumference. This choice was entirely informed by my desire to show
off the names of the study's participants - shoutout to *Smudge*, *Abba*, and *Macaulay Mccat*.
:::

:::::
:::::

<!-- Plotly Dashboard Demo --->
<br>

:::::{.column-page-inset}
:::::{.columns}

:::{.column width="35%"}
**Plotly Dashboard Demo**

I am a frequent victim of my own wild disregard for my personal time, which once
manifested in a short-lived quest to sell interactive dashboards as a freelancer 
on [Fiverr](https://www.fiverr.com/). 

I created this dashboard for my freelancer page, using R and the [{plotly}](https://plotly.com/r/) interactive graphing library.
:::

:::{.column width="5%"}
:::

:::{.column width="60%"}
<!-- {{< video https://vimeo.com/1063903950?share=copy >}} --->
```{=html}
<a 
  href="https://vimeo.com/1063903950" 
  class="glightbox" 
  data-glightbox="description: .custom-desc1"
>
  <img src="resources/thumb.jpg" alt="image" style = "width: 100%; height: 100%;"/>
</a>
```

:::{class="glightbox-desc custom-desc1"}
**Plotly Dashboard Demo**

I am a frequent victim of my own wild disregard for my personal time, which once
manifested in a short-lived quest to sell interactive dashboards as a freelancer 
on [Fiverr](https://www.fiverr.com/). 

I created this dashboard for my freelancer page, using R and the [{plotly}](https://plotly.com/r/) interactive graphing library.
:::
:::

:::::
:::::

<!-- Color Sorting --->
<br>

:::::{.column-page-inset}
:::::{.columns #reverse}

:::{.column width="50%"}
![](resources/color_sort.gif)
:::

:::{.column width="5%"}
:::

:::{.column width="45%"}
**Color Sorting**

This is the output of a program which used Python's [Pillow](https://pillow.readthedocs.io/en/stable/) imaging library to sub-divide images into a grid of small squares, sort the squares
by colour, and then re-assemble the sorted squares into a new image.
:::

:::::
:::::

<!-- The Center for Active Transportation --->
<br>

:::::{.column-page-inset}
:::::{.columns}

**The Center for Active Transportation**

These are selected slides from a presentation I gave at the end of an internship
with The Center for Active Transportation.

![](resources/map_1.png)

:::{.column width="50%"}
![](resources/bar_chart_1.png)
:::

:::{.column width="50%"}
![](resources/dumbell.png)
:::

:::::
:::::
